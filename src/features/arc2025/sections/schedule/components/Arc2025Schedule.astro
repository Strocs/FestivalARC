---
import { ScheduleLayoutGrid } from '@/features/shared/components/ScheduleLayoutGrid'
import type { ScheduleLayoutGridProps } from '@/features/shared/components/ScheduleLayoutGrid/types'
import { arc2025Day1ScheduleLayout } from '../data'
import type { GridLayout } from '@/features/schedule'
import type { Arc2025StagePayload, Arc2025EventPayload } from '../types'

const mapScheduleLayoutDataToUI = ({
  trackSlots,
  eventsByTrack,
  timeSlots,
}: GridLayout<
  Arc2025StagePayload,
  Arc2025EventPayload
>): ScheduleLayoutGridProps => {
  const rows = trackSlots.map((track) => {
    const items = eventsByTrack.get(track.id)

    if (!items) {
      return {
        track: {
          id: track.id,
          name: track.payload?.name ?? '',
          color: track.payload?.color ?? '',
          order: track.order,
          category: track.payload?.category ?? '',
        },
        slots: [],
      }
    }

    const mappedSlots = items.map((item) => {
      if ('type' in item && item.type === 'group') {
        return {
          type: 'group' as const,
          position: item.position,
          slots: item.events.map(({ position, event }) => ({
            position,
            slot: {
              id: event.id,
              trackId: event.trackId,
              header: {
                title: event.payload?.title ?? '',
                subTitle: event.payload?.subTitle ?? '',
              },
              body: {
                duration: event.payload?.duration,
                time: {
                  start: event.time.start,
                  end: event.time.end,
                },
              },
              footer: {
                infoButton:
                  event.payload?.description || event.payload?.galleryUrl
                    ? 'Más Info'
                    : undefined,
              },
              labels: {
                left: event.payload?.category ?? '',
                right: track.payload?.name ?? '',
              },
            },
          })),
        } satisfies ScheduleLayoutGridProps['rows'][number]['slots'][number]
      }

      return {
        position: item.position,
        slot: {
          id: item.event.id,
          trackId: item.event.trackId,
          header: {
            title: item.event.payload?.title ?? '',
            subTitle: item.event.payload?.subTitle ?? '',
          },
          body: {
            duration: item.event.payload?.duration,
            time: {
              start: item.event.time.start,
              end: item.event.time.end,
            },
          },
          footer: {
            infoButton:
              item.event.payload?.description || item.event.payload?.galleryUrl
                ? 'Más Info'
                : undefined,
          },
          labels: {
            left: item.event.payload?.category ?? '',
            right: track.payload?.name ?? '',
          },
        },
      } satisfies ScheduleLayoutGridProps['rows'][number]['slots'][number]
    })

    return {
      track: {
        id: track.id,
        name: track.payload?.name ?? '',
        color: track.payload?.color ?? '',
        order: track.order,
        category: track.payload?.category ?? '',
      },
      slots: mappedSlots,
    }
  })

  return {
    timeSlots: [...timeSlots],
    rows,
  }
}
---

<ScheduleLayoutGrid
  client:idle
  {...mapScheduleLayoutDataToUI(arc2025Day1ScheduleLayout)}
/>
